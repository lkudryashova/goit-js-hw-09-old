{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["const formData = {\n  email: '',\n  message: '',\n};\n\nconst messageForm = document.querySelector('.feedback-form');\n\nconst fillFormFields = () => {\n  const formDataFormLS = JSON.parse(\n    localStorage.getItem('feedback-form-state')\n  );\n  if (formDataFormLS === null) {\n    return;\n  }\n\n  for (const key in formDataFormLS) {\n    if (formDataFormLS.hasOwnProperty(key)) {\n      messageForm.elements[key].value = formDataFormLS[key];\n    }\n  }\n};\n\nfillFormFields();\n\nconst onFormFieldInput = event => {\n  formData[event.target.name] = event.target.value.trim();\n  localStorage.setItem('feedback-form-state', JSON.stringify(formData));\n};\n\nmessageForm.addEventListener('input', onFormFieldInput);\n\nconst onMessageFormSubmit = event => {\n  event.preventDefault();\n  event.target.reset();\n  localStorage.removeItem('feedback-form-state');\n  if (!formData.email || !formData.message) {\n    alert('Please fill all fields');\n  } else {\n    console.log(formData);\n  }\n};\n\nmessageForm.addEventListener('submit', onMessageFormSubmit);\n"],"names":["formData","messageForm","fillFormFields","formDataFormLS","key","onFormFieldInput","event","onMessageFormSubmit"],"mappings":"wFAAA,MAAMA,EAAW,CACf,MAAO,GACP,QAAS,EACX,EAEMC,EAAc,SAAS,cAAc,gBAAgB,EAErDC,EAAiB,IAAM,CAC3B,MAAMC,EAAiB,KAAK,MAC1B,aAAa,QAAQ,qBAAqB,CAC9C,EACE,GAAIA,IAAmB,KAIvB,UAAWC,KAAOD,EACZA,EAAe,eAAeC,CAAG,IACnCH,EAAY,SAASG,CAAG,EAAE,MAAQD,EAAeC,CAAG,EAG1D,EAEAF,IAEA,MAAMG,EAAmBC,GAAS,CAChCN,EAASM,EAAM,OAAO,IAAI,EAAIA,EAAM,OAAO,MAAM,OACjD,aAAa,QAAQ,sBAAuB,KAAK,UAAUN,CAAQ,CAAC,CACtE,EAEAC,EAAY,iBAAiB,QAASI,CAAgB,EAEtD,MAAME,EAAsBD,GAAS,CACnCA,EAAM,eAAc,EACpBA,EAAM,OAAO,QACb,aAAa,WAAW,qBAAqB,EACzC,CAACN,EAAS,OAAS,CAACA,EAAS,QAC/B,MAAM,wBAAwB,EAE9B,QAAQ,IAAIA,CAAQ,CAExB,EAEAC,EAAY,iBAAiB,SAAUM,CAAmB"}